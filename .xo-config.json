{
	"env": ["es2021", "browser", "greasemonkey"],
	"extends": ["xo-react"],
	"globals": ["GM_addValueChangeListener", "GM_notification"],
	"overrides": [
		{
			"files": ["**/*.{ts,tsx}"],
			"rules": {
				"@typescript-eslint/indent": "off",
				"@typescript-eslint/no-explicit-any": "error",
				"@typescript-eslint/quotes": [
					"error",
					"single",
					{
						"avoidEscape": true
					}
				],
				"@typescript-eslint/require-await": "error",
				"require-await": "off",
				"no-unused-vars": "off",
				"@typescript-eslint/naming-convention": "off",
				"react/react-in-jsx-scope": "off"
			}
		},
		{
			"files": ["test/**/*"],
			"plugins": ["jest"],
			"extends": ["plugin:jest/recommended", "plugin:jest/style"],
			"rules": {
				"no-mixed-operators": "off"
			}
		}
	],
	"rules": {
		"//": [
			"off",
			{
				"*/indent": "Prettier is better at handling a mix of regular js, ts-specifics, and jsx. When prettier indents it is more consistent (especially non-vanilla js).",
				"no-mixed-spaces-and-tabs": "https://prettier.io/docs/en/options.html#tabs",
				"react/jsx-curly-newline": "Let prettier handle it",
				"react/prop-types": "Preact has no such thing"
			}
		],
		"require-await": "error",
		"import/extensions": "off",
		"indent": "off",
		"max-depth": "off",
		"new-cap": [
			"error",
			{
				"capIsNewExceptionPattern": "^GM_"
			}
		],
		"no-await-in-loop": "off",
		"no-mixed-spaces-and-tabs": ["error", "smart-tabs"],
		"no-unused-vars": [
			"error",
			{
				"varsIgnorePattern": "^h$|^Fragment$"
			}
		],
		"prefer-template": "error",
		"quotes": [
			"error",
			"single",
			{
				"avoidEscape": true
			}
		],
		"react/jsx-curly-newline": "off",
		"react/jsx-indent": "off",
		"react/jsx-tag-spacing": [
			"error",
			{
				"beforeSelfClosing": "always"
			}
		],
		"react/no-unknown-property": [
			"error",
			{
				"ignore": ["class", "stroke-linecap", "stroke-linejoin", "stroke-width"]
			}
		],
		"react/prefer-stateless-function": "error",
		"react/prop-types": "off",
		"react/function-component-definition": [
			"error",
			{
				"namedComponents": "arrow-function",
				"unnamedComponents": "arrow-function"
			}
		],
		"import/order": [
			"error",
			{
				"newlines-between": "always",
				"warnOnUnassignedImports": true
			}
		]
	},
	"settings": {
		"react": {
			"pragma": "h",
			"pragmaFrag": "Fragment"
		}
	}
}
