{
	"author": "melusc",
	"dependencies": {
		"clsx": "^1.1.1",
		"dayjs": "^1.10.7",
		"dompurify": "^2.3.3",
		"file-saver": "^2.0.5",
		"htm": "^3.1.0",
		"immer": "^9.0.6",
		"jszip": "^3.7.1",
		"nanoid": "^3.1.25",
		"preact": "^10.5.14",
		"valtio": "^1.2.3"
	},
	"description": "",
	"devDependencies": {
		"@babel/core": "^7.15.5",
		"@sindresorhus/tsconfig": "^2.0.0",
		"@types/dompurify": "^2.2.3",
		"@types/file-saver": "^2.0.3",
		"@types/tampermonkey": "^4.0.5",
		"babel-loader": "^8.2.2",
		"babel-plugin-replace-identifiers": "^0.1.1",
		"clean-webpack-plugin": "^4.0.0",
		"concurrently": "^6.2.2",
		"csso-loader": "^0.3.1",
		"eslint-config-xo-react": "^0.25.0",
		"gulp": "^4.0.2",
		"gulp-cached": "^1.1.1",
		"gulp-cli": "^2.3.0",
		"gulp-rename": "^2.0.0",
		"gulp-svgmin": "^4.0.1",
		"prettier": "^2.4.1",
		"sass": "^1.42.1",
		"sass-loader": "^12.1.0",
		"serve": "^12.0.1",
		"terser-webpack-plugin": "^5.2.4",
		"ts-loader": "^9.2.6",
		"type-fest": "^2.3.4",
		"typescript": "^4.4.3",
		"webpack": "^5.53.0",
		"webpack-cli": "^4.8.0",
		"webpack-glob-entry": "^2.1.1",
		"xo": "^0.44.0"
	},
	"license": "MIT",
	"name": "moodle_userscript",
	"prettier": {
		"arrowParens": "avoid",
		"bracketSpacing": false,
		"singleQuote": true,
		"trailingComma": "all",
		"useTabs": true
	},
	"private": true,
	"scripts": {
		"build": "npm run lint && npm run webpack",
		"gulp": "gulp start",
		"lint": "prettier -w . && xo --fix",
		"serve": "serve dist",
		"start": "concurrently npm:gulp npm:webpack:w -r -k",
		"test": "xo",
		"webpack": "webpack -c production.config.js --env PROD",
		"webpack:w": "webpack -c production.config.js -w"
	},
	"version": "1.0.0",
	"xo": {
		"env": [
			"es2021",
			"browser",
			"greasemonkey"
		],
		"extends": [
			"xo-react"
		],
		"globals": [
			"GM_addValueChangeListener",
			"GM_notification"
		],
		"overrides": [
			{
				"env": [
					"es2021",
					"node"
				],
				"files": [
					"./*.js"
				],
				"rules": {
					"unicorn/prefer-module": "off"
				}
			},
			{
				"files": [
					"**/*.{ts,tsx}"
				],
				"rules": {
					"@typescript-eslint/indent": "off",
					"@typescript-eslint/no-explicit-any": "error",
					"@typescript-eslint/quotes": [
						"error",
						"single",
						{
							"avoidEscape": true
						}
					],
					"no-unused-vars": "off"
				}
			}
		],
		"rules": {
			"//": [
				"off",
				{
					"*/indent": "Prettier is better at handling a mix of regular js, ts-specifics, and jsx. When prettier indents it is more consistent (especially non-vanilla js).",
					"no-mixed-spaces-and-tabs": "https://prettier.io/docs/en/options.html#tabs",
					"react/jsx-curly-newline": "Let prettier handle it",
					"react/prop-types": "Preact has no such thing"
				}
			],
			"import/extensions": "off",
			"indent": "off",
			"max-depth": "off",
			"new-cap": [
				"error",
				{
					"capIsNewExceptionPattern": "^GM_"
				}
			],
			"no-await-in-loop": "off",
			"no-mixed-spaces-and-tabs": [
				"error",
				"smart-tabs"
			],
			"no-unused-vars": [
				"error",
				{
					"varsIgnorePattern": "^h$|^Fragment$"
				}
			],
			"node/file-extension-in-import": "off",
			"prefer-template": "error",
			"quotes": [
				"error",
				"single",
				{
					"avoidEscape": true
				}
			],
			"react/jsx-curly-newline": "off",
			"react/jsx-indent": "off",
			"react/jsx-tag-spacing": [
				"error",
				{
					"beforeSelfClosing": "always"
				}
			],
			"react/no-unknown-property": [
				"error",
				{
					"ignore": [
						"class",
						"stroke-linecap",
						"stroke-linejoin",
						"stroke-width"
					]
				}
			],
			"react/prefer-stateless-function": "error",
			"react/prop-types": "off"
		},
		"settings": {
			"react": {
				"pragma": "h",
				"pragmaFrag": "Fragment"
			}
		}
	}
}
